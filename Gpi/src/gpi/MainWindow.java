/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gpi;

//import javax.swing.DefaultComboBoxModel;
import java.awt.FileDialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author jeremy
 */
public class MainWindow extends javax.swing.JFrame {

	public ParcInfo parcInfo;
	public DefaultComboBoxModel<Batiment> cbm_batiments;
	public DefaultComboBoxModel<Salle> cbm_salles;
	public int compteur = 0;

	/**
	 * Creates new form MainWindow
	 */
	public MainWindow(ParcInfo parcInfo) {

		initComponents();

		this.parcInfo = parcInfo;

		this.jComboBoxBatSupervision.setModel(this.parcInfo.getBatiments());
		this.jComboBoxSallesSupervision.setModel(this.parcInfo.getSalles());
		this.jComboBoxSalleAjoutMachine.setModel(new DefaultComboBoxModel());
		this.jComboBoxSalleAjoutMachine.addItem("Stock");

		this.jComboBoxBatimentMaintenance.setModel(this.parcInfo.getBatiments());
		this.jComboBoxSallesMaintenance.setModel(this.parcInfo.getSalles());
		this.jComboBoxSalleMaintenance.setModel(this.parcInfo.getSalles());

		this.jComboBoxBatSupervision.setSelectedIndex(-1);
		this.jComboBoxSallesSupervision.setSelectedIndex(-1);
		this.jComboBoxOsSupervision.setSelectedIndex(-1);

		this.jComboBoxBatimentMaintenance.setSelectedIndex(-1);
		this.jComboBoxSallesMaintenance.setSelectedIndex(-1);
		this.jComboBoxSalleMaintenance.setSelectedIndex(-1);

		this.jLabelRecapBatiment.setText("Vous avez " + this.parcInfo.nbBatiments() + " Batiments en service");
		this.jLabelRecapOrdinateurs.setText("Vous avez " + this.parcInfo.nbOrdinateurs() + " Ordinateurs dont "
				+ this.parcInfo.nbOrdinateurs("Install√©") + " en Service, "
				+ this.parcInfo.nbOrdinateurs("Stock") + " en Stock et "
				+ this.parcInfo.nbOrdinateurs("En Panne") + " en panne");
		this.jLabelRecapSalles.setText("Vous avez " + this.parcInfo.nbSalles() + " Salles en service");
	}

	private RowFilter<DefaultTableModel, Object> CreerListeFiltres(ArrayList<String> arguments) {
		List<RowFilter<DefaultTableModel, Object>> liste = new ArrayList<RowFilter<DefaultTableModel, Object>>(arguments.size());

		// Constitution de la liste de filtres
		for (int i = 0; i < arguments.size(); i++) {
			RowFilter<DefaultTableModel, Object> filtre = null;
			filtre = RowFilter.regexFilter(".*" + arguments.get(i) + ".*");
			liste.add(filtre);
		}

		RowFilter<DefaultTableModel, Object> filtresConcatenes = null;
		if (arguments.size() > 1) {
			// Concatenation de ces filtres
			filtresConcatenes = RowFilter.andFilter(liste);
			return filtresConcatenes;
		}

		return liste.get(0);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabLvlOnglets = new javax.swing.JTabbedPane();
        jPaneRecapitulatif = new javax.swing.JPanel();
        jLabelRecapBatiment = new javax.swing.JLabel();
        jLabelRecapSalles = new javax.swing.JLabel();
        jLabelRecapOrdinateurs = new javax.swing.JLabel();
        jPanelSupervision = new javax.swing.JPanel();
        jScrollPaneTableauSupervision = new javax.swing.JScrollPane();
        jTableauSupervision = new javax.swing.JTable();
        jPanelFiltresSupervision = new javax.swing.JPanel();
        jComboBoxBatSupervision = new javax.swing.JComboBox();
        jLabelBatiments = new javax.swing.JLabel();
        jButtonFiltrerSupervision = new javax.swing.JButton();
        jLabelSallesSupervision = new javax.swing.JLabel();
        jComboBoxSallesSupervision = new javax.swing.JComboBox();
        jLabelBatiments1 = new javax.swing.JLabel();
        jComboBoxOsSupervision = new javax.swing.JComboBox();
        jButtonPasFiltrerSupervision = new javax.swing.JButton();
        jButtonDetails = new javax.swing.JButton();
        jPanelMaintenance = new javax.swing.JPanel();
        jPanelFiltresMaintenance = new javax.swing.JPanel();
        jButtonFiltrerMaintenance = new javax.swing.JButton();
        jLabelBatimentMaintenance = new javax.swing.JLabel();
        jLabelSallesMaintenance = new javax.swing.JLabel();
        jComboBoxSallesMaintenance = new javax.swing.JComboBox();
        jComboBoxBatimentMaintenance = new javax.swing.JComboBox();
        jPanelOrdinateurMaintenance = new javax.swing.JPanel();
        jComboBoxSalleMaintenance = new javax.swing.JComboBox();
        jComboBoxOrdinateursMaintenance = new javax.swing.JComboBox();
        jButtonTransfererMaintenance = new javax.swing.JButton();
        jButtonMaJMaintenance = new javax.swing.JButton();
        jLabelSalleOrdiMaintenance = new javax.swing.JLabel();
        jLabelOSOrdinateur = new javax.swing.JLabel();
        jComboBoxOSMaintenance = new javax.swing.JComboBox();
        jButtonChangerOS = new javax.swing.JButton();
        jProgressBarInstall = new javax.swing.JProgressBar();
        jLabelEtatMaintenance = new javax.swing.JLabel();
        jComboBoxEtatMaintenance = new javax.swing.JComboBox();
        jLabelSalleOrdiMaintenance1 = new javax.swing.JLabel();
        jButtonChangerEtat = new javax.swing.JButton();
        jPanelFabriquant = new javax.swing.JPanel();
        jTextFieldHostname = new javax.swing.JTextField();
        jLabelHostname = new javax.swing.JLabel();
        jLabelEtatAjoutMachine = new javax.swing.JLabel();
        jLabelSalleAjoutMachine = new javax.swing.JLabel();
        jLabelOSAjoutMachine = new javax.swing.JLabel();
        jComboBoxEtatAjoutMachine = new javax.swing.JComboBox();
        jComboBoxSalleAjoutMachine = new javax.swing.JComboBox();
        jScrollPaneAjoutMachine = new javax.swing.JScrollPane();
        jListOS = new javax.swing.JList();
        jButtonValiderAjoutMAchine = new javax.swing.JButton();
        jTextFieldModele = new javax.swing.JTextField();
        jLabelModele = new javax.swing.JLabel();
        jTextFieldSerial = new javax.swing.JTextField();
        jLabelSerial = new javax.swing.JLabel();
        jLabelFabriquant = new javax.swing.JLabel();
        jTextFieldFabriquant = new javax.swing.JTextField();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFichier = new javax.swing.JMenu();
        jMenuItemCharger = new javax.swing.JMenuItem();
        jMenuItemSauvegarder = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemQuitter = new javax.swing.JMenuItem();
        jMenuOptions = new javax.swing.JMenu();
        jMenuItemConfiguration = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de Parc Informatique");
        setMinimumSize(new java.awt.Dimension(810, 514));

        jTabLvlOnglets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabLvlOngletsMouseClicked(evt);
            }
        });
        jTabLvlOnglets.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabLvlOngletsStateChanged(evt);
            }
        });

        jPaneRecapitulatif.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPaneRecapitulatifComponentShown(evt);
            }
        });

        jLabelRecapBatiment.setText("Vous avez 0 Batiments en service ");

        jLabelRecapSalles.setText("Vous avez 0 Salles en service ");

        jLabelRecapOrdinateurs.setText("Vous avez 0 Ordinateurs dont 0 en Service, 0 en Stock et 0 en panne ");

        javax.swing.GroupLayout jPaneRecapitulatifLayout = new javax.swing.GroupLayout(jPaneRecapitulatif);
        jPaneRecapitulatif.setLayout(jPaneRecapitulatifLayout);
        jPaneRecapitulatifLayout.setHorizontalGroup(
            jPaneRecapitulatifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneRecapitulatifLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneRecapitulatifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelRecapBatiment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRecapSalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRecapOrdinateurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(433, Short.MAX_VALUE))
        );
        jPaneRecapitulatifLayout.setVerticalGroup(
            jPaneRecapitulatifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneRecapitulatifLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabelRecapBatiment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRecapSalles)
                .addGap(8, 8, 8)
                .addComponent(jLabelRecapOrdinateurs)
                .addContainerGap(424, Short.MAX_VALUE))
        );

        jTabLvlOnglets.addTab("R√©capitulatif", jPaneRecapitulatif);

        jTableauSupervision.setAutoCreateRowSorter(true);
        jTableauSupervision.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "B√¢timent", "Salle", "Ordinateurs", "OS"
            }
        ));
        jScrollPaneTableauSupervision.setViewportView(jTableauSupervision);

        jPanelFiltresSupervision.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtres"));
        jPanelFiltresSupervision.setToolTipText("");

        jComboBoxBatSupervision.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "TP3", "U4", "U3", "U2", "K5-Burk" }));
        jComboBoxBatSupervision.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBatSupervisionItemStateChanged(evt);
            }
        });
        jComboBoxBatSupervision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBatSupervisionActionPerformed(evt);
            }
        });

        jLabelBatiments.setText("B√¢timents");

        jButtonFiltrerSupervision.setText("Affichage (Avec filtres)");
        jButtonFiltrerSupervision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrerSupervisionActionPerformed(evt);
            }
        });

        jLabelSallesSupervision.setText("Salles");

        jComboBoxSallesSupervision.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "212", "210", "110" }));

        jLabelBatiments1.setText("OS");

        jComboBoxOsSupervision.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Windows 8", "Windows 7", "Windows XP", "Windows Vista", "Mac Os", "Linux", "Sans OS" }));

        jButtonPasFiltrerSupervision.setText("Affichage (Sans filtres)");
        jButtonPasFiltrerSupervision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasFiltrerSupervisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFiltresSupervisionLayout = new javax.swing.GroupLayout(jPanelFiltresSupervision);
        jPanelFiltresSupervision.setLayout(jPanelFiltresSupervisionLayout);
        jPanelFiltresSupervisionLayout.setHorizontalGroup(
            jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltresSupervisionLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBatiments, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSallesSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jComboBoxSallesSupervision, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxBatSupervision, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFiltresSupervisionLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFiltrerSupervision))
                    .addGroup(jPanelFiltresSupervisionLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabelBatiments1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOsSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(jButtonPasFiltrerSupervision)))
                .addContainerGap())
        );
        jPanelFiltresSupervisionLayout.setVerticalGroup(
            jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltresSupervisionLayout.createSequentialGroup()
                .addGroup(jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxBatSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBatiments)
                    .addComponent(jComboBoxOsSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBatiments1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFiltresSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSallesSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSallesSupervision))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFiltresSupervisionLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jButtonPasFiltrerSupervision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFiltrerSupervision)
                .addGap(20, 20, 20))
        );

        jButtonDetails.setText("D√©tails");
        jButtonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSupervisionLayout = new javax.swing.GroupLayout(jPanelSupervision);
        jPanelSupervision.setLayout(jPanelSupervisionLayout);
        jPanelSupervisionLayout.setHorizontalGroup(
            jPanelSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSupervisionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelFiltresSupervision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelSupervisionLayout.createSequentialGroup()
                        .addComponent(jButtonDetails)
                        .addGap(0, 682, Short.MAX_VALUE))
                    .addComponent(jScrollPaneTableauSupervision))
                .addContainerGap())
        );
        jPanelSupervisionLayout.setVerticalGroup(
            jPanelSupervisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSupervisionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFiltresSupervision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTableauSupervision, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDetails)
                .addGap(33, 33, 33))
        );

        jTabLvlOnglets.addTab("Supervision", jPanelSupervision);

        jPanelFiltresMaintenance.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtres"));
        jPanelFiltresMaintenance.setToolTipText("");

        jButtonFiltrerMaintenance.setText("Filtrer");
        jButtonFiltrerMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrerMaintenanceActionPerformed(evt);
            }
        });

        jLabelBatimentMaintenance.setText("B√¢timents");

        jLabelSallesMaintenance.setText("Salles");

        jComboBoxSallesMaintenance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "212", "210", "110" }));

        jComboBoxBatimentMaintenance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "TP3", "U4", "U3", "U2", "K5-Burk" }));
        jComboBoxBatimentMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBatimentMaintenanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFiltresMaintenanceLayout = new javax.swing.GroupLayout(jPanelFiltresMaintenance);
        jPanelFiltresMaintenance.setLayout(jPanelFiltresMaintenanceLayout);
        jPanelFiltresMaintenanceLayout.setHorizontalGroup(
            jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltresMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBatimentMaintenance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSallesMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jComboBoxSallesMaintenance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxBatimentMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonFiltrerMaintenance)
                .addContainerGap())
        );
        jPanelFiltresMaintenanceLayout.setVerticalGroup(
            jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFiltresMaintenanceLayout.createSequentialGroup()
                .addGroup(jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFiltresMaintenanceLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButtonFiltrerMaintenance))
                    .addGroup(jPanelFiltresMaintenanceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxBatimentMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelBatimentMaintenance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFiltresMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxSallesMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSallesMaintenance))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelOrdinateurMaintenance.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordinateur"));

        jComboBoxOrdinateursMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOrdinateursMaintenanceActionPerformed(evt);
            }
        });

        jButtonTransfererMaintenance.setText("Transf√©rer");
        jButtonTransfererMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTransfererMaintenanceActionPerformed(evt);
            }
        });

        jButtonMaJMaintenance.setText("Mettre √† Jour");
        jButtonMaJMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMaJMaintenanceActionPerformed(evt);
            }
        });

        jLabelSalleOrdiMaintenance.setText("Salle");

        jLabelOSOrdinateur.setText("OS");

        jComboBoxOSMaintenance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Windows 8", "Windows 7", "Windows XP", "Windows Vista", "Mac Os", "Linux", "Sans OS" }));
        jComboBoxOSMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOSMaintenanceActionPerformed(evt);
            }
        });

        jButtonChangerOS.setText("Changer l'OS");
        jButtonChangerOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangerOSActionPerformed(evt);
            }
        });

        jProgressBarInstall.setValue(20);

        jLabelEtatMaintenance.setText("Etat");

        jComboBoxEtatMaintenance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock", "En Panne", "Install√©" }));
        jComboBoxEtatMaintenance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxEtatMaintenanceMouseClicked(evt);
            }
        });
        jComboBoxEtatMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEtatMaintenanceActionPerformed(evt);
            }
        });

        jLabelSalleOrdiMaintenance1.setText("Nom");

        jButtonChangerEtat.setText("Changer l'√©tat");
        jButtonChangerEtat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangerEtatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOrdinateurMaintenanceLayout = new javax.swing.GroupLayout(jPanelOrdinateurMaintenance);
        jPanelOrdinateurMaintenance.setLayout(jPanelOrdinateurMaintenanceLayout);
        jPanelOrdinateurMaintenanceLayout.setHorizontalGroup(
            jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdinateurMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSalleOrdiMaintenance)
                    .addComponent(jLabelEtatMaintenance)
                    .addComponent(jLabelOSOrdinateur)
                    .addComponent(jLabelSalleOrdiMaintenance1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarInstall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelOrdinateurMaintenanceLayout.createSequentialGroup()
                        .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxEtatMaintenance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSalleMaintenance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxOrdinateursMaintenance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxOSMaintenance, 0, 1, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonTransfererMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMaJMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonChangerEtat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonChangerOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelOrdinateurMaintenanceLayout.setVerticalGroup(
            jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdinateurMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOrdinateursMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMaJMaintenance)
                    .addComponent(jLabelSalleOrdiMaintenance1))
                .addGap(18, 18, 18)
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTransfererMaintenance)
                    .addComponent(jComboBoxSalleMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSalleOrdiMaintenance))
                .addGap(8, 8, 8)
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEtatMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChangerEtat)
                    .addComponent(jLabelEtatMaintenance))
                .addGap(14, 14, 14)
                .addGroup(jPanelOrdinateurMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxOSMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChangerOS)
                    .addComponent(jLabelOSOrdinateur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarInstall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE))
        );

        jPanelFabriquant.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajout Machine"));

        jLabelHostname.setText("Nom d'hote");

        jLabelEtatAjoutMachine.setText("Etat");

        jLabelSalleAjoutMachine.setText("Salle");

        jLabelOSAjoutMachine.setText("OS");

        jComboBoxEtatAjoutMachine.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stock", "En Panne", "Install√©" }));
        jComboBoxEtatAjoutMachine.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxEtatAjoutMachineItemStateChanged(evt);
            }
        });

        jListOS.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Windows 8", "Windows 7", "Windows XP", "Windows Vista", "Mac Os", "Linux", "Sans OS" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPaneAjoutMachine.setViewportView(jListOS);

        jButtonValiderAjoutMAchine.setText("Valider");
        jButtonValiderAjoutMAchine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValiderAjoutMAchineActionPerformed(evt);
            }
        });

        jLabelModele.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelModele.setText("Mod√®le");

        jLabelSerial.setText("N¬∞ de Serie");

        jLabelFabriquant.setText("Fabriquant");

        jTextFieldFabriquant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFabriquantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFabriquantLayout = new javax.swing.GroupLayout(jPanelFabriquant);
        jPanelFabriquant.setLayout(jPanelFabriquantLayout);
        jPanelFabriquantLayout.setHorizontalGroup(
            jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFabriquantLayout.createSequentialGroup()
                        .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabelHostname))
                            .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFabriquant)
                                    .addComponent(jLabelModele)))
                            .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelSerial)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldFabriquant)
                            .addComponent(jTextFieldSerial, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldModele)
                            .addComponent(jTextFieldHostname)))
                    .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEtatAjoutMachine)
                            .addComponent(jLabelOSAjoutMachine)
                            .addComponent(jLabelSalleAjoutMachine))
                        .addGap(54, 54, 54)
                        .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxSalleAjoutMachine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxEtatAjoutMachine, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPaneAjoutMachine, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                            .addComponent(jButtonValiderAjoutMAchine, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelFabriquantLayout.setVerticalGroup(
            jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFabriquantLayout.createSequentialGroup()
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldHostname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHostname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldFabriquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFabriquant))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldModele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelModele))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSerial)
                    .addComponent(jTextFieldSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEtatAjoutMachine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEtatAjoutMachine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSalleAjoutMachine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSalleAjoutMachine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFabriquantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneAjoutMachine, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelOSAjoutMachine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonValiderAjoutMAchine)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelMaintenanceLayout = new javax.swing.GroupLayout(jPanelMaintenance);
        jPanelMaintenance.setLayout(jPanelMaintenanceLayout);
        jPanelMaintenanceLayout.setHorizontalGroup(
            jPanelMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelOrdinateurMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelFiltresMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanelFabriquant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMaintenanceLayout.setVerticalGroup(
            jPanelMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMaintenanceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMaintenanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelFabriquant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMaintenanceLayout.createSequentialGroup()
                        .addComponent(jPanelFiltresMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelOrdinateurMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(31, 156, Short.MAX_VALUE))
        );

        jTabLvlOnglets.addTab("Maintenance", jPanelMaintenance);

        jMenuFichier.setText("Fichier");

        jMenuItemCharger.setText("Charger");
        jMenuItemCharger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChargerActionPerformed(evt);
            }
        });
        jMenuFichier.add(jMenuItemCharger);

        jMenuItemSauvegarder.setText("Sauvegarder");
        jMenuItemSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSauvegarderActionPerformed(evt);
            }
        });
        jMenuFichier.add(jMenuItemSauvegarder);
        jMenuFichier.add(jSeparator1);

        jMenuItemQuitter.setText("Quitter");
        jMenuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitterActionPerformed(evt);
            }
        });
        jMenuFichier.add(jMenuItemQuitter);

        jMenuBar.add(jMenuFichier);

        jMenuOptions.setText("Options");

        jMenuItemConfiguration.setText("Configuration");
        jMenuItemConfiguration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigurationActionPerformed(evt);
            }
        });
        jMenuOptions.add(jMenuItemConfiguration);

        jMenuBar.add(jMenuOptions);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabLvlOnglets)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabLvlOnglets)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMaJMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMaJMaintenanceActionPerformed
		// TODO add your handling code here:
		Date date = new Date();
		Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();

		ordinateur.ajouterOperationHistorique("Mise √† jour du syst√®me", date);

		JOptionPane.showMessageDialog(this, "Op√©ration effectu√©e avec succ√®s !", "Information", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButtonMaJMaintenanceActionPerformed

    private void jButtonFiltrerMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrerMaintenanceActionPerformed
		// TODO add your handling code here:
		int indexBatiment = this.jComboBoxBatimentMaintenance.getSelectedIndex();
		int indexSalle = this.jComboBoxSallesMaintenance.getSelectedIndex();

		// Si un batiment est selectionne
		if (indexBatiment > -1) {
			// Alors on regarde Si une salle est selectionnee
			if (indexSalle > -1) { // Si une salle est selectionnee
				Salle salle = (Salle) this.jComboBoxSallesMaintenance.getSelectedItem();
				this.jComboBoxOrdinateursMaintenance.setModel(salle.getOrdinateurs());
				indexSalle = -1;
				for (int i = 0; i < this.parcInfo.getSalles().getSize(); i++) {
					if (((Salle) this.parcInfo.getSalles().getElementAt(i)).contientOrdinateur((Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem())) {
						indexSalle = i;
					}
				}

				if (indexSalle != -1) {
					this.jComboBoxSalleMaintenance.setSelectedIndex(indexSalle);
				}

				Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();
				if (ordinateur != null) {
					this.jComboBoxOSMaintenance.setSelectedItem(new String(ordinateur.getOs().toString()));
					if (ordinateur.getEtat() == "Stock") {
						this.jComboBoxEtatMaintenance.setSelectedIndex(0);
					}
					if (ordinateur.getEtat() == "En Panne") {
						this.jComboBoxEtatMaintenance.setSelectedIndex(1);
					}
					if (ordinateur.getEtat() == "Install√©") {
						this.jComboBoxEtatMaintenance.setSelectedIndex(2);
					}
				}
			} else { // Si une salle n'est pas selectionnee
				JOptionPane.showMessageDialog(this, "Vous devez s√©lectionner une salle", "Information", JOptionPane.ERROR_MESSAGE);
			}
		}

		if ((indexBatiment == -1) && (indexSalle == -1)) {
			this.jComboBoxOrdinateursMaintenance.setModel(this.parcInfo.getOrdinateurs());
		}

		//this.jComboBoxBatimentMaintenance.setSelectedIndex(-1);
		//this.jComboBoxSallesMaintenance.setSelectedIndex(-1);
    }//GEN-LAST:event_jButtonFiltrerMaintenanceActionPerformed

    private void jButtonFiltrerSupervisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrerSupervisionActionPerformed
		// TODO add your handling code here:

		int indexBatiment = this.jComboBoxBatSupervision.getSelectedIndex();
		int indexSalle = this.jComboBoxSallesSupervision.getSelectedIndex();
		int indexOs = this.jComboBoxOsSupervision.getSelectedIndex();

		// Si un batiment est selectionne
		if (indexBatiment > -1) {
			// Alors on regarde Si une salle est selectionnee
			if (indexSalle > -1) { // Si une salle est selectionnee
				DefaultTableModel modele = (DefaultTableModel) this.jTableauSupervision.getModel();

				String nomBatiment = ((Batiment) this.jComboBoxBatSupervision.getSelectedItem()).getNom();
				String nomSalle = ((Salle) this.jComboBoxSallesSupervision.getSelectedItem()).getNom();

				// Creation des filtres
				ArrayList<String> arguments = new ArrayList<String>();
				arguments.add(nomSalle);
				arguments.add(nomBatiment);

				// On applique les filtres
				TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modele);
				sorter.setRowFilter(CreerListeFiltres(arguments));

				this.jTableauSupervision.setRowSorter(sorter);
			} else { // Si une salle n'est pas selectionnee
				DefaultTableModel modele = (DefaultTableModel) this.jTableauSupervision.getModel();

				String nomBatiment = ((Batiment) this.jComboBoxBatSupervision.getSelectedItem()).getNom();

				// Creation des filtres
				ArrayList<String> arguments = new ArrayList<String>();
				arguments.add(nomBatiment);

				// On applique les filtres
				TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modele);
				sorter.setRowFilter(CreerListeFiltres(arguments));
				this.jTableauSupervision.setRowSorter(sorter);
			}
		} else {
			// Sinon, Si une salle est selectionnee et pas un batiment
			if (indexSalle > -1) {
				DefaultTableModel modele = (DefaultTableModel) this.jTableauSupervision.getModel();

				RowFilter<DefaultTableModel, Object> filter = null;

				String nomSalle = ((Salle) this.jComboBoxSallesSupervision.getSelectedItem()).getNom();

				// Creation des filtres
				ArrayList<String> arguments = new ArrayList<String>();
				arguments.add(nomSalle);

				TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modele);
				sorter.setRowFilter(CreerListeFiltres(arguments));
				this.jTableauSupervision.setRowSorter(sorter);
			} else {
				// Alors on regarde Si un OS est selectionne
				if (indexOs > -1) {
				} else { // Un OS n'est pas selectionne
					JOptionPane.showMessageDialog(this, "Vous n'avez s√©lectionn√© aucun filtre", "Information", JOptionPane.ERROR_MESSAGE);
				}
			}
		}

		//this.jComboBoxBatSupervision.setSelectedIndex(-1);
		//this.jComboBoxSallesSupervision.setSelectedIndex(-1);
		//this.jComboBoxOsSupervision.setSelectedIndex(-1);
    }//GEN-LAST:event_jButtonFiltrerSupervisionActionPerformed
    private void jComboBoxOSMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOSMaintenanceActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOSMaintenanceActionPerformed

    private void jButtonValiderAjoutMAchineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValiderAjoutMAchineActionPerformed
		// TODO add your handling code here:
		String NomOS = this.jListOS.getSelectedValue().toString();

		OS os = new OS(NomOS, "2");
		Ordinateur ordinateur = new Ordinateur(this.jTextFieldHostname.getText(), this.jTextFieldModele.getText(), this.jTextFieldFabriquant.getText(), this.jTextFieldSerial.getText(), os);

		ordinateur.setEtat(this.jComboBoxEtatAjoutMachine.getSelectedItem().toString());

		if (ordinateur.getEtat() == "Stock") {
			ordinateur.setDateAcquisition(new Date());
		} else {
			ordinateur.setDateAcquisition(new Date());
			ordinateur.setDateInstall(new Date());
		}


		if (this.jComboBoxEtatAjoutMachine.getSelectedItem().toString() == "Stock") {
			this.parcInfo.ajouterNouvelOrdinateur(ordinateur, ((Salle) this.parcInfo.getSalles().getElementAt(0)));
		} else {
			Salle salle = (Salle) this.jComboBoxSalleAjoutMachine.getSelectedItem();
			this.parcInfo.ajouterNouvelOrdinateur(ordinateur, salle);
		}
    }//GEN-LAST:event_jButtonValiderAjoutMAchineActionPerformed

    private void jTextFieldFabriquantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFabriquantActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFabriquantActionPerformed

    private void jComboBoxEtatAjoutMachineItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxEtatAjoutMachineItemStateChanged
		// TODO add your handling code here:
		if (this.jComboBoxEtatAjoutMachine.getSelectedItem().toString() == "Stock") {
			this.jComboBoxSalleAjoutMachine.setModel(new DefaultComboBoxModel());
			this.jComboBoxSalleAjoutMachine.addItem("Stock");
		} else {
			this.jComboBoxSalleAjoutMachine.setModel(this.parcInfo.getSalles());
		}
    }//GEN-LAST:event_jComboBoxEtatAjoutMachineItemStateChanged

    private void jMenuItemChargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChargerActionPerformed
		// TODO add your handling code here:
		FileDialog fileDialog = new FileDialog(this, "Choix du fichier √† charger", FileDialog.LOAD);
		fileDialog.setVisible(true);
		String fichier = fileDialog.getDirectory() + fileDialog.getFile();
		System.out.println(fichier);
		this.parcInfo = null;
		this.parcInfo = Sauvegarde.charger(fichier);
    }//GEN-LAST:event_jMenuItemChargerActionPerformed

    private void jMenuItemSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSauvegarderActionPerformed
		// TODO add your handling code here:
		FileDialog fileDialog = new FileDialog(this, "Choix du fichier √† sauvegarder", FileDialog.SAVE);
		fileDialog.setVisible(true);
		String fichier = fileDialog.getDirectory() + fileDialog.getFile();
		Sauvegarde.sauvegarder(this.parcInfo, fichier);
    }//GEN-LAST:event_jMenuItemSauvegarderActionPerformed

    private void jMenuItemConfigurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigurationActionPerformed
		// TODO add your handling code here:
		ConfigurationWindow configuration = new ConfigurationWindow(this);
		configuration.setVisible(true);
    }//GEN-LAST:event_jMenuItemConfigurationActionPerformed

    private void jMenuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitterActionPerformed
		// TODO add your handling code here:
		System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitterActionPerformed

    private void jPaneRecapitulatifComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPaneRecapitulatifComponentShown
		// TODO add your handling code here:
    }//GEN-LAST:event_jPaneRecapitulatifComponentShown

    private void jTabLvlOngletsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabLvlOngletsStateChanged
		// TODO add your handling code here:
    }//GEN-LAST:event_jTabLvlOngletsStateChanged

    private void jButtonPasFiltrerSupervisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasFiltrerSupervisionActionPerformed
		// TODO add your handling code here:
		DefaultTableModel modele = new DefaultTableModel();

		modele.addColumn(new String("B√¢timents"));
		modele.addColumn(new String("Salles"));
		modele.addColumn(new String("Ordinateurs"));
		modele.addColumn(new String("OS"));

		int nbBatiments = this.parcInfo.getBatiments().getSize();
		System.out.println("nbBatiments : " + nbBatiments);

		// Pour tous les batiments
		for (int i = 0; i < nbBatiments; i++) {
			Vector ligne = null;
			Batiment batiment = null;
			batiment = (Batiment) this.parcInfo.getBatiments().getElementAt(i);
			int nbSalles = batiment.getSalles().getSize();

			// Si le b√¢timent a au moins 1 salle
			if (nbSalles > 0) {
				// Pour toutes les salles du batiment
				for (int j = 0; j < nbSalles; j++) {
					Salle salle = (Salle) batiment.getSalles().getElementAt(j);

					int nbOrdinateurs = salle.getOrdinateurs().getSize();

					// Si la salle a au moins 1 ordinateur
					if (nbOrdinateurs > 0) {
						for (int k = 0; k < nbOrdinateurs; k++) {
							Ordinateur ordinateur = (Ordinateur) salle.getOrdinateurs().getElementAt(k);

							// Si l'ordinateur a au moins 1 OS
							OS os = ordinateur.getOs();

							ligne = new Vector();

							ligne.add(batiment);
							ligne.add(salle);
							ligne.add(ordinateur);
							ligne.add(os);
							modele.addRow(ligne);
						}
					}

					if (nbOrdinateurs == 0) {
						ligne = new Vector();

						ligne.add(batiment);
						ligne.add(salle);
						modele.addRow(ligne);
					}
				}
			} else {
				ligne = new Vector();

				ligne.add(batiment);
				modele.addRow(ligne);
			}
		}
		this.jTableauSupervision.setModel(modele);

		this.jComboBoxSallesSupervision.setModel(this.parcInfo.getSalles());

		this.jComboBoxBatSupervision.setSelectedIndex(-1);
		this.jComboBoxSallesSupervision.setSelectedIndex(-1);
		this.jComboBoxOsSupervision.setSelectedIndex(-1);
    }//GEN-LAST:event_jButtonPasFiltrerSupervisionActionPerformed

    private void jButtonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetailsActionPerformed
		// TODO add your handling code here:
		Ordinateur ordinateur = null;
		ordinateur = (Ordinateur) this.jTableauSupervision.getValueAt(this.jTableauSupervision.getSelectedRow(), 2);
		DetailedWindow details = new DetailedWindow(ordinateur);
		details.setVisible(true);
    }//GEN-LAST:event_jButtonDetailsActionPerformed

    private void jComboBoxBatSupervisionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBatSupervisionItemStateChanged
		// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBatSupervisionItemStateChanged

    private void jComboBoxBatSupervisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBatSupervisionActionPerformed
		// TODO add your handling code here:    
		if (this.jComboBoxBatSupervision.getSelectedIndex() == -1) {
			return;
		}

		Batiment batiment = (Batiment) this.jComboBoxBatSupervision.getSelectedItem();

		this.jComboBoxSallesSupervision.setModel(batiment.getSalles());
    }//GEN-LAST:event_jComboBoxBatSupervisionActionPerformed

    private void jComboBoxEtatMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEtatMaintenanceActionPerformed
		// TODO add your handling code here:		
    }//GEN-LAST:event_jComboBoxEtatMaintenanceActionPerformed

    private void jComboBoxOrdinateursMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrdinateursMaintenanceActionPerformed
		// TODO add your handling code here:
		Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();

		if (ordinateur.getEtat() == "Stock") {
			this.jComboBoxEtatMaintenance.setSelectedIndex(0);
		}
		if (ordinateur.getEtat() == "En Panne") {
			this.jComboBoxEtatMaintenance.setSelectedIndex(1);
		}
		if (ordinateur.getEtat() == "Install√©") {
			this.jComboBoxEtatMaintenance.setSelectedIndex(2);
		}

		int indexSalle = -1;
		for (int i = 0; i < this.parcInfo.getSalles().getSize(); i++) {
			if (((Salle) this.parcInfo.getSalles().getElementAt(i)).contientOrdinateur(ordinateur)) {
				indexSalle = i;
			}
		}

		if (indexSalle != -1) {
			this.jComboBoxSalleMaintenance.setSelectedIndex(indexSalle);
			this.jComboBoxOSMaintenance.setSelectedItem(new String(ordinateur.getOs().toString()));
		}

		if (ordinateur != null) {
			this.jComboBoxOSMaintenance.setSelectedItem(new String(ordinateur.getOs().toString()));
		}
    }//GEN-LAST:event_jComboBoxOrdinateursMaintenanceActionPerformed

    private void jComboBoxBatimentMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBatimentMaintenanceActionPerformed
		// TODO add your handling code here:
		if (this.jComboBoxBatimentMaintenance.getSelectedIndex() == -1) {
			return;
		}

		Batiment batiment = (Batiment) this.jComboBoxBatimentMaintenance.getSelectedItem();

		this.jComboBoxSallesMaintenance.setModel(batiment.getSalles());
    }//GEN-LAST:event_jComboBoxBatimentMaintenanceActionPerformed

    private void jTabLvlOngletsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabLvlOngletsMouseClicked
		// TODO add your handling code here:
		this.jLabelRecapBatiment.setText("Vous avez " + this.parcInfo.nbBatiments() + " Batiments en service");
		this.jLabelRecapOrdinateurs.setText("Vous avez " + this.parcInfo.nbOrdinateurs() + " Ordinateurs dont "
				+ this.parcInfo.nbOrdinateurs("Install√©") + " en Service, "
				+ this.parcInfo.nbOrdinateurs("Stock") + " en Stock et "
				+ this.parcInfo.nbOrdinateurs("En Panne") + " en panne");
		this.jLabelRecapSalles.setText("Vous avez " + this.parcInfo.nbSalles() + " Salles en service");
    }//GEN-LAST:event_jTabLvlOngletsMouseClicked

    private void jComboBoxEtatMaintenanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxEtatMaintenanceMouseClicked
		// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEtatMaintenanceMouseClicked

    private void jButtonChangerOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangerOSActionPerformed
		// TODO add your handling code here:
		Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();

		String osAvant = ordinateur.getOs().getNom();
		String osApres = this.jComboBoxOSMaintenance.getSelectedItem().toString();

		if (osAvant == osApres) {
			return;
		}

		OS os = new OS(osApres, "2");
		ordinateur.setOs(os);

		ordinateur.ajouterOperationHistorique("Changement de syst√®me d'exploitation : \'" + osAvant + "\' -> \'" + osApres + "\'", new Date());
		JOptionPane.showMessageDialog(this, "Changement de syst√®me d'exploitation effectu√© !", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonChangerOSActionPerformed

    private void jButtonChangerEtatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangerEtatActionPerformed
		// TODO add your handling code here:
		Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();

		String etatAvant = ordinateur.getEtat();
		String etatApres = this.jComboBoxEtatMaintenance.getSelectedItem().toString();

		if (etatAvant == etatApres) {
			return;
		}

		if ((etatAvant == "Stock") && (ordinateur.getDateInstall() == null)) {
			ordinateur.setDateInstall(new Date());
		}

		ordinateur.setEtat(this.jComboBoxEtatMaintenance.getSelectedItem().toString());

		ordinateur.ajouterOperationHistorique("Changement d'√©tat : \'" + etatAvant + "\' -> \'" + etatApres + "\'", new Date());
		JOptionPane.showMessageDialog(this, "Changement d'√©tat effectu√© !", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonChangerEtatActionPerformed

    private void jButtonTransfererMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTransfererMaintenanceActionPerformed
		// TODO add your handling code here:
		Ordinateur ordinateur = (Ordinateur) this.jComboBoxOrdinateursMaintenance.getSelectedItem();

		if (ordinateur == null) {
			return;
		}

		int indexSalle = -1;
		for (int i = 0; i < this.parcInfo.getSalles().getSize(); i++) {
			if (((Salle) this.parcInfo.getSalles().getElementAt(i)).contientOrdinateur(ordinateur)) {
				indexSalle = i;
			}
		}

		if (indexSalle != -1) {
			Salle salleAvant = (Salle) this.parcInfo.getSalles().getElementAt(indexSalle);
			this.jComboBoxSalleMaintenance.setSelectedIndex(indexSalle);
			this.jComboBoxOSMaintenance.setSelectedItem(new String(ordinateur.getOs().toString()));

			Salle salleApres = (Salle) this.jComboBoxSalleMaintenance.getSelectedItem();

			if (salleAvant == salleApres) {
				return;
			}

			salleAvant.getOrdinateurs().removeElement(ordinateur);
			salleApres.affecterOrdinateur(ordinateur);
			ordinateur.ajouterOperationHistorique("Transfert effectu√© : \'" + salleAvant.toString() + "\' -> \'" + salleApres.toString() + "\'", new Date());
			JOptionPane.showMessageDialog(this, "Transfert effectu√© !", "Information", JOptionPane.INFORMATION_MESSAGE);
		}

    }//GEN-LAST:event_jButtonTransfererMaintenanceActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {


			javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());













		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class
					.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class
					.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class
					.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class
					.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>*/

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				//new MainWindow().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChangerEtat;
    private javax.swing.JButton jButtonChangerOS;
    private javax.swing.JButton jButtonDetails;
    private javax.swing.JButton jButtonFiltrerMaintenance;
    private javax.swing.JButton jButtonFiltrerSupervision;
    private javax.swing.JButton jButtonMaJMaintenance;
    private javax.swing.JButton jButtonPasFiltrerSupervision;
    private javax.swing.JButton jButtonTransfererMaintenance;
    private javax.swing.JButton jButtonValiderAjoutMAchine;
    private javax.swing.JComboBox jComboBoxBatSupervision;
    private javax.swing.JComboBox jComboBoxBatimentMaintenance;
    private javax.swing.JComboBox jComboBoxEtatAjoutMachine;
    private javax.swing.JComboBox jComboBoxEtatMaintenance;
    private javax.swing.JComboBox jComboBoxOSMaintenance;
    private javax.swing.JComboBox jComboBoxOrdinateursMaintenance;
    private javax.swing.JComboBox jComboBoxOsSupervision;
    private javax.swing.JComboBox jComboBoxSalleAjoutMachine;
    private javax.swing.JComboBox jComboBoxSalleMaintenance;
    private javax.swing.JComboBox jComboBoxSallesMaintenance;
    private javax.swing.JComboBox jComboBoxSallesSupervision;
    private javax.swing.JLabel jLabelBatimentMaintenance;
    private javax.swing.JLabel jLabelBatiments;
    private javax.swing.JLabel jLabelBatiments1;
    private javax.swing.JLabel jLabelEtatAjoutMachine;
    private javax.swing.JLabel jLabelEtatMaintenance;
    private javax.swing.JLabel jLabelFabriquant;
    private javax.swing.JLabel jLabelHostname;
    private javax.swing.JLabel jLabelModele;
    private javax.swing.JLabel jLabelOSAjoutMachine;
    private javax.swing.JLabel jLabelOSOrdinateur;
    private javax.swing.JLabel jLabelRecapBatiment;
    private javax.swing.JLabel jLabelRecapOrdinateurs;
    private javax.swing.JLabel jLabelRecapSalles;
    private javax.swing.JLabel jLabelSalleAjoutMachine;
    private javax.swing.JLabel jLabelSalleOrdiMaintenance;
    private javax.swing.JLabel jLabelSalleOrdiMaintenance1;
    private javax.swing.JLabel jLabelSallesMaintenance;
    private javax.swing.JLabel jLabelSallesSupervision;
    private javax.swing.JLabel jLabelSerial;
    private javax.swing.JList jListOS;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFichier;
    private javax.swing.JMenuItem jMenuItemCharger;
    private javax.swing.JMenuItem jMenuItemConfiguration;
    private javax.swing.JMenuItem jMenuItemQuitter;
    private javax.swing.JMenuItem jMenuItemSauvegarder;
    private javax.swing.JMenu jMenuOptions;
    private javax.swing.JPanel jPaneRecapitulatif;
    private javax.swing.JPanel jPanelFabriquant;
    private javax.swing.JPanel jPanelFiltresMaintenance;
    private javax.swing.JPanel jPanelFiltresSupervision;
    private javax.swing.JPanel jPanelMaintenance;
    private javax.swing.JPanel jPanelOrdinateurMaintenance;
    private javax.swing.JPanel jPanelSupervision;
    private javax.swing.JProgressBar jProgressBarInstall;
    private javax.swing.JScrollPane jScrollPaneAjoutMachine;
    private javax.swing.JScrollPane jScrollPaneTableauSupervision;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabLvlOnglets;
    private javax.swing.JTable jTableauSupervision;
    private javax.swing.JTextField jTextFieldFabriquant;
    private javax.swing.JTextField jTextFieldHostname;
    private javax.swing.JTextField jTextFieldModele;
    private javax.swing.JTextField jTextFieldSerial;
    // End of variables declaration//GEN-END:variables
}
